// root-docs/.vitepress/config.mjs
import { defineConfig } from "file:///E:/codes/web/mo-notes/node_modules/.pnpm/vitepress@1.0.0-rc.45_@algolia+client-search@4.22.1_sass@1.71.1_search-insights@2.13.0/node_modules/vitepress/dist/node/index.js";
import markdownItFootnote from "file:///E:/codes/web/mo-notes/node_modules/.pnpm/markdown-it-footnote@4.0.0/node_modules/markdown-it-footnote/index.mjs";

// root-docs/.vitepress/fans-tools/tools/autoSidebar.js
import path from "node:path";
import fs from "node:fs";
var __vite_injected_original_dirname = "E:\\codes\\web\\mo-notes\\root-docs\\.vitepress\\fans-tools\\tools";
var root = path.resolve(__vite_injected_original_dirname, "../../..");
var ignore_list = ["index.md", ".vitepress", "node_modules", ".idea", "assets", "embedded_notes", "xrepo"];
var isDir = (path3) => fs.lstatSync(path3).isDirectory();
var process_filename = (momo) => {
  let res1 = momo.split(".md")[0];
  let res2 = res1.split(" ")[1];
  return res2;
};
var process_filename_part = (momo) => {
  let res1 = momo.split(".md")[0];
  return res1;
};
var create_sidebar = (dir_unprocessed, folder_level) => {
  const dir_path = path.join(root, dir_unprocessed);
  const files_all = fs.readdirSync(dir_path);
  const is_effective = (arr1, arr2) => Array.from(new Set(arr1.filter((item) => !new Set(arr2).has(item))));
  const files_effective = is_effective(files_all, ignore_list);
  const new_level = 0;
  const create_list = (items, repo_path, dir_unprocessed2, folder_level2, now_level) => {
    const final_list = [];
    for (let i = 0; i < items.length; i++) {
      const item = items[i];
      const item_path = path.join(repo_path, item);
      const isDir_res = isDir(item_path);
      if (isDir_res) {
        const new_items = fs.readdirSync(item_path);
        let dir_name_processed = process_filename(item);
        let new_floder = `${dir_unprocessed2}/${item}`;
        if (!now_level) {
          now_level = 1;
        }
        let next_level = now_level + 1;
        let collapsed_state = Boolean;
        if (now_level > folder_level2) {
          collapsed_state = true;
        } else {
          collapsed_state = false;
        }
        final_list.push({
          text: dir_name_processed,
          collapsed: collapsed_state,
          items: create_list(new_items, item_path, new_floder, folder_level2, next_level)
        });
      } else {
        const file_name = path.basename(item_path);
        const file_ext = path.extname(item_path);
        if (file_ext !== ".md") {
          continue;
        }
        let file_name_processed = process_filename(file_name);
        let file_name_processed_part = process_filename_part(file_name);
        final_list.push({
          text: file_name_processed,
          link: `${dir_unprocessed2}/${file_name}`
        });
      }
    }
    return final_list;
  };
  return create_list(files_effective, dir_path, dir_unprocessed, folder_level, new_level);
};
var setAllSidebars = (arr) => {
  let obj = {};
  for (let i = 0; i < arr.length; i++) {
    let repo = arr[i];
    let repo_name = repo[0];
    let level = repo[1];
    obj[repo_name] = create_sidebar(repo_name, level);
  }
  return obj;
};

// root-docs/.vitepress/fans-tools/tools/createArticleIndexes.js
import path2 from "node:path";
import fs2 from "node:fs";
var __vite_injected_original_dirname2 = "E:\\codes\\web\\mo-notes\\root-docs\\.vitepress\\fans-tools\\tools";
var runing = () => {
  const root2 = __vite_injected_original_dirname2.split(".vitepress")[0];
  const repo_dir = path2.resolve(root2, "articles");
  const files_all = fs2.readdirSync(repo_dir);
  const articlesCounts = files_all.length;
  const repoindex = [];
  for (let i = 0; i < files_all.length; i++) {
    const obj = {};
    obj.zoid = files_all[i].split(" ")[0];
    obj.title = files_all[i].split(" ")[1];
    console.log(obj);
  }
};
var createArticleIndexes = () => {
  runing();
};

// root-docs/.vitepress/config.mjs
createArticleIndexes();
var config_default = defineConfig({
  lang: "cn",
  title: "\u9B54\u7B14\u8BB0",
  description: "A VitePress Site",
  // gitee 打包请替换为/mo_notes/避免样式错误
  base: "/mo-notes/",
  head: [
    ["link", { rel: "icon", href: "./favicon.ico" }]
  ],
  // srcDir: 'docs',
  // lastUpdated: true,
  themeConfig: {
    siteTitle: "mo-notes",
    logo: "/icon/png/logo.png",
    nav: [
      {
        text: "\u7F51\u5740\u805A\u5408 \u{1F680}",
        items: [
          { text: "\u9605\u89C8\u6A21\u5F0F", link: "/pages/all-sites" },
          // { text: '搜索模式', link: '/pages/all-sites-search' }
          { text: "\u641C\u7D22\u6A21\u5F0F", link: "/pages/test" }
        ]
      },
      { text: "\u6587\u7AE0\u805A\u5408 \u{1F4F0}", link: "/pages/all-articles" },
      { text: "\u7B14\u8BB0\u805A\u5408 \u{1F4DA}", link: "/pages/all-notes" },
      {
        text: "\u5EFA\u7AD9\u4E13\u9898 \u{1F310}",
        items: [
          { text: "\u5168\u6D41\u7A0B", link: "/repo/build-site/00 \u7B80\u8FF0" },
          { text: "vitepress", link: "/repo/vitepress/00 \u7B80\u8FF0" },
          { text: "vuepress", link: "/repo/vuepress/00 \u7B80\u8FF0" }
        ]
      },
      {
        text: "\u524D\u7AEF\u4E13\u9898 \u{1F4DA}",
        items: [
          {
            text: "1\uFE0F\u20E3 \u57FA\u7840\u90E8\u5206",
            items: [
              { text: "HTML", link: "/repo/programming/html/00 \u7B80\u8FF0" },
              { text: "SCSS", link: "/repo/programming/scss/00 \u7B80\u8FF0" },
              { text: "JavaScript", link: "/repo/programming/javascript/00 \u7B80\u8FF0" },
              { text: "network-request", link: "/repo/programming/network-request/01 axios/00 \u7B80\u8FF0" }
            ]
          },
          {
            text: "2\uFE0F\u20E3 \u8FDB\u9636\u77E5\u8BC6",
            items: [
              { text: "Node.js", link: "/repo/programming/nodejs/00 \u7B80\u8FF0" },
              { text: "TypeScript", link: "/repo/programming/typescript/01 \u57FA\u7840\u5185\u5BB9/01 \u4ECB\u7ECD\u4E0E\u5B89\u88C5" },
              { text: "React", link: "/repo/programming/react/00 \u7B80\u8FF0" },
              { text: "Vue", link: "/repo/programming/vue/00 \u7B80\u8FF0" }
            ]
          },
          {
            text: "3\uFE0F\u20E3 \u5E94\u7528\u9636\u6BB5",
            items: [
              { text: "Uniapp", link: "/repo/programming/uniapp/00 \u7B80\u8FF0" },
              { text: "Electron", link: "/repo/programming/electron/00 \u7B80\u8FF0" },
              { text: "Docker", link: "/repo/programming/docker/00 \u7B80\u8FF0" },
              { text: "SQL\u6570\u636E\u5E93", link: "/repo/programming/mysql/00 \u7B80\u8FF0" },
              { text: "cocos", link: "/repo/cocos-creator/00 \u7B80\u8FF0" }
            ]
          }
        ]
      },
      // {
      //   text: 'C语言 📓', items: [
      //     { text: 'C# ', link: '/repo/programming/c-sharp/00 简述' }
      //   ]
      // },
      // {
      //   text: '爬虫 📓', items: [
      //     { text: 'python', link: '/repo/programming/python/00 简述' }
      //   ]
      // },
      {
        text: "\u5176\u4ED6\u6742\u9879 \u{1F3B0}",
        items: [
          { text: "\u66F4\u65B0\u65E5\u5FD7 \u2699", link: "/pages/history-updated/01 \u5EFA\u8BBE\u8BA1\u5212\u4E0E\u8FDB\u5EA6" },
          { text: "\u7248\u6743\u58F0\u660E \u{1F4E3}", link: "/pages/copyright" },
          { text: "\u6E38\u620F\u4E16\u754C \u{1F3AE}", link: "/repo/game/00 \u7B80\u8FF0" },
          { text: "\u6CD5\u5F8B\u7B14\u8BB0 \u{1F4D3}", link: "https://hengqianfan.github.io/mo-notes-for-law/" },
          { text: "\u6D4B\u8BD5\u9875\u9762 \u{1F3A8}", link: "/pages/test" },
          { text: "\u672C\u7AD9\u5730\u5740 GP", link: "https://hengqianfan.github.io/mo-notes/" },
          { text: "\u5176\u4ED6\u9879\u76EE\u4E0E\u8BA1\u5212", link: "pages/plans" }
        ]
      }
    ],
    sidebar: setAllSidebars([
      ["/repo/computer-init", 1],
      ["/repo/build-site", 1],
      ["/repo/computer", 1],
      ["/repo/programming/html", 1],
      ["/repo/programming/scss", 1],
      ["/repo/programming/javascript", 1],
      ["/repo/programming/typescript", 1],
      ["/repo/programming/nodejs", 1],
      ["/repo/programming/network-request", 1],
      ["/repo/programming/react", 1],
      ["/repo/programming/vue", 1],
      ["/repo/programming/mysql", 1],
      ["/repo/programming/electron", 1],
      ["/repo/programming/uniapp", 1],
      ["/repo/programming/docker", 1],
      ["/repo/vitepress", 1],
      ["/repo/github", 1],
      ["/repo/vscode", 1],
      ["/repo/programming/python", 1],
      ["/repo/cocos-creator", 1],
      ["/pages/history-updated", 1],
      ["/repo/game", 1]
    ]),
    // outline: [1, 6],
    outline: {
      label: "\u76EE\u5F55",
      // 因为要占用h1做网页副标题
      level: [2, 6]
    },
    // lastUpdated: true,
    search: {
      provider: "local"
      // provider: 'algolia'
    },
    docFooter: {
      prev: "\u4E0A\u4E00\u7BC7",
      next: "\u4E0B\u4E00\u7BC7"
    },
    socialLinks: [
      { icon: "github", link: "https://github.com/hengqianfan/mo-notes" }
    ],
    returnToTopLabel: "\u56DE\u5230\u9876\u90E8"
  },
  markdown: {
    config: (md) => {
      md.use(markdownItFootnote);
    }
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
